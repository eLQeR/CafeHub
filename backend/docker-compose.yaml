services:
  api:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py wait_for_db && 
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./data/:$PG_DATA
    depends_on:
      - db

  db:
    image: postgres:16.0-alpine3.18
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./data/db:$PG_DATA

  redis:
    image: "redis:alpine"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A Cafe_system worker -l INFO
    depends_on:
      - db
      - redis
      - api
    restart: on-failure
    env_file:
      - .env

#  celery-beat:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    command: celery -A Cafe_system beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
#    depends_on:
#      - db
#      - redis
#      - api
#    restart: on-failure
#    env_file:
#      - .env
